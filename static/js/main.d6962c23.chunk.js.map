{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","copyGoods","useState","isVisible","setIsVisible","isReversed","setIsReversed","None","sortBy","setSortBy","reverse","Length","sort","good1","good2","length","Alphabet","localeCompare","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"wJAkBKA,E,4CAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,uBAAAA,I,mBAAAA,I,gBAAAA,M,KAME,IAAME,EAAgB,WAC3B,IAAMC,EAAS,UAAOF,GAEtB,EAAkCG,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAmBJ,EAASS,MAAxD,mBAAOC,EAAP,KAAeC,EAAf,KAeA,OAJIJ,GACFJ,EAAUS,UAGJF,GACN,KAAKV,EAASa,OACZV,EAAUW,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAME,OAASD,EAAMC,UAEvD,MAEF,KAAKjB,EAASkB,SACZf,EAAUW,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,cAAcH,MAOzD,OACE,sBAAKI,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,UACIf,GACA,wBACEgB,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAMhB,GAAa,IAH9B,qBAUHD,GACC,sBAAKe,UAAU,iBAAf,UACE,oBAAIA,UAAU,YAAd,SACIjB,EAAUoB,KAAI,SAACC,GAAD,OACd,oBAEEJ,UAAU,YAFZ,SAIGI,GAHIA,QAQX,wBACEJ,UAAU,cACVE,QAnDM,WACdd,GAAeD,IAmDPc,KAAK,SAHP,qBAQA,wBACED,UAAU,cACVE,QAhEI,WACZd,GAAc,GACdG,EAAUX,EAASS,OA+DXY,KAAK,SAHP,mBAQA,wBACED,UAAU,cACVE,QAAS,kBAAMX,EAAUX,EAASkB,WAClCG,KAAK,SAHP,6BAQA,wBACED,UAAU,cACVE,QAAS,kBAAMX,EAAUX,EAASa,SAClCQ,KAAK,SAHP,mCC1GVI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.d6962c23.chunk.js","sourcesContent":["/* eslint-disable react/no-unused-state */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabet,\n  Length,\n  None,\n}\n\nexport const App: React.FC = () => {\n  const copyGoods = [...goodsFromServer];\n\n  const [isVisible, setIsVisible] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState<SortType>(SortType.None);\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortBy(SortType.None);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  if (isReversed) {\n    copyGoods.reverse();\n  }\n\n  switch (sortBy) {\n    case SortType.Length:\n      copyGoods.sort((good1, good2) => (good1.length - good2.length));\n\n      break;\n\n    case SortType.Alphabet:\n      copyGoods.sort((good1, good2) => good1.localeCompare(good2));\n\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__start\">\n        {!isVisible && (\n          <button\n            type=\"button\"\n            className=\"App__button\"\n            onClick={() => setIsVisible(true)}\n          >\n            Start\n          </button>\n        )}\n      </div>\n\n      {isVisible && (\n        <div className=\"App__container\">\n          <ul className=\"App__list\">\n            {(copyGoods.map((good) => (\n              <li\n                key={good}\n                className=\"App__item\"\n              >\n                {good}\n              </li>\n            )))}\n          </ul>\n\n          <button\n            className=\"App__button\"\n            onClick={reverse}\n            type=\"button\"\n          >\n            Reverse\n          </button>\n\n          <button\n            className=\"App__button\"\n            onClick={reset}\n            type=\"button\"\n          >\n            Reset\n          </button>\n\n          <button\n            className=\"App__button\"\n            onClick={() => setSortBy(SortType.Alphabet)}\n            type=\"button\"\n          >\n            Sort alphabetic\n          </button>\n\n          <button\n            className=\"App__button\"\n            onClick={() => setSortBy(SortType.Length)}\n            type=\"button\"\n          >\n            Sort by length\n          </button>\n\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}